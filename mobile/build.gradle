apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'jacoco-android'
apply plugin: 'com.github.gfx.ribbonizer'
apply plugin: 'io.fabric'

android {
    flavorDimensions "default"

    def globalConfiguration = rootProject.extensions.getByName("ext")

    compileSdkVersion globalConfiguration["androidCompileSdkVersion"]
    buildToolsVersion globalConfiguration["androidBuildToolsVersion"]

    defaultConfig {
        minSdkVersion globalConfiguration["androidMinSdkVersion"]
        targetSdkVersion globalConfiguration["androidTargetSdkVersion"]
        multiDexEnabled = true
        testInstrumentationRunner "com.rodrigobresan.sampleboilerplateandroid.test.TestRunner"
        versionCode 10
        versionName "2.0"
    }

    signingConfigs {
        release {
            storeFile file("../releasekeystore")
            storePassword "123456"
            keyAlias 'releaseAlias'
            keyPassword "123456"
        }
        qa {
            storeFile file("../qakeystore")
            storePassword "123456"
            keyAlias 'qaAlias'
            keyPassword "123456"
        }
    }

    productFlavors {
        demo {
            applicationIdSuffix = ".demo"
        }
        pro {
            applicationIdSuffix = ".pro"
        }
    }

    buildTypes {
        debug {
            debuggable true
            testCoverageEnabled true
            applicationIdSuffix ".debug"
            buildConfigField "String", "API_URL", "\"http://demo0080297.mockable.io/\""
            buildConfigField "String", "API_KEY", "\"\""
        }
        qa {
            debuggable true
            signingConfig signingConfigs.qa
            applicationIdSuffix ".qa"
            buildConfigField "String", "API_URL", "\"http://demo0080297.mockable.io/\""
            buildConfigField "String", "API_KEY", "\"\""
        }
        release {
            debuggable false
            signingConfig signingConfigs.release
            buildConfigField "String", "API_URL", "\"https://api.themoviedb.org/3/\""
            buildConfigField "String", "API_KEY", "\"4696a23366342ca5c5a52b1b8706e474\""
        }
    }

    dexOptions {
        preDexLibraries = false
        dexInProcess = false
        javaMaxHeapSize "4g"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }

    lintOptions {
        quiet true
        abortOnError false
        ignoreWarnings true
    }

    buildToolsVersion '26.0.2'
}

kapt {
    correctErrorTypes = true
}

configurations.all {
    resolutionStrategy {
        force "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    }
}

dependencies {
    def mobileUiDependencies = rootProject.ext.mobileUiDependencies
    def mobileUiTestDependencies = rootProject.ext.mobileUiTestDependencies

    implementation project(':presentation')
    implementation project(':data')
    implementation project(':remote')
    implementation project(':cache')

    implementation mobileUiDependencies.javaxAnnotation
    implementation "android.arch.persistence.room:runtime:1.0.0"
    kapt "android.arch.persistence.room:compiler:1.0.0"

    compile('com.crashlytics.sdk.android:crashlytics:2.9.0@aar') {
        transitive = true;
    }

    compile 'com.google.firebase:firebase-core:11.6.0'
    compile 'com.google.firebase:firebase-auth:11.6.0'
    compile 'com.google.android.gms:play-services-auth:11.6.0'


    implementation 'com.github.florent37:glidepalette:2.1.1'

    implementation mobileUiDependencies.kotlin
    implementation mobileUiDependencies.javaxInject
    implementation mobileUiDependencies.rxKotlin
    implementation mobileUiDependencies.androidAnnotations
    implementation mobileUiDependencies.androidSupportV4
    implementation mobileUiDependencies.androidSupportV13
    implementation mobileUiDependencies.appCompatV7
    implementation mobileUiDependencies.supportRecyclerView
    implementation mobileUiDependencies.supportDesign
    implementation mobileUiDependencies.timber
    implementation mobileUiDependencies.rxAndroid
    implementation mobileUiDependencies.glide
    implementation mobileUiDependencies.dagger
    implementation mobileUiDependencies.daggerSupport
    implementation mobileUiDependencies.stetho

    testImplementation mobileUiTestDependencies.kotlinJUnit

    kapt mobileUiDependencies.daggerCompiler
    kapt mobileUiDependencies.daggerProcessor
    compileOnly mobileUiDependencies.glassfishAnnotation

    // Instrumentation test dependencies
    androidTestImplementation mobileUiTestDependencies.junit
    androidTestImplementation mobileUiTestDependencies.mockito
    androidTestImplementation mobileUiTestDependencies.mockitoAndroid
    androidTestImplementation(mobileUiTestDependencies.espressoCore) {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestImplementation(mobileUiTestDependencies.androidRunner) {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestImplementation(mobileUiTestDependencies.androidRules) {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestImplementation(mobileUiTestDependencies.espressoIntents) {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestImplementation(mobileUiTestDependencies.espressoContrib) {
        exclude module: 'appcompat'
        exclude module: 'appcompat-v7'
        exclude module: 'support-v4'
        exclude module: 'support-v13'
        exclude module: 'support-annotations'
        exclude module: 'recyclerview-v7'
        exclude module: 'design'
    }

    kaptTest mobileUiDependencies.daggerCompiler
    kaptAndroidTest mobileUiDependencies.daggerCompiler
}

ribbonizer {
    // "manifest application[android:icon]" is automatically added to the list
    iconNames "@drawable/ic_launcher"

    // badge colors: debug = gray; qa = yellow; release = green
    builder { variant, iconFile ->
        switch (variant.buildType.name) {
            case "debug":
                def filter = customColorRibbonFilter(variant, iconFile, "#FF0000")
                filter.label = "DEV"
                return filter
                break

            case "qa":
                def filter = yellowRibbonFilter(variant, iconFile)
                filter.label = "QA"
                return filter
                break
        }
    }

    forcedVariantsNames "demoRelease"
    forcedVariantsNames "proRelease"
}

apply plugin: 'com.google.gms.google-services'
